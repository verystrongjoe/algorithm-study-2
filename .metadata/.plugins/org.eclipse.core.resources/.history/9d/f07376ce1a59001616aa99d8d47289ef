import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class source {

	/**
	 * 
	 * 해설 
	 * 
	 * 아래와 같이 인형들이 왼쪽부터 오른으로 있다고 가정하고
	 *  .............i...............j
	 * 
	 * D[i] i번쨰 인형이 들고 있는 인형의 개수
	 * H[i] i번째 인형의 크기
	 * 
	 * H[i] > H[j]의 경우는 무시
	 * H[i] = H[j]의 경우는 Answer는 D[i] > D[j]일 경우 D[i]
	 * H[i] < H[j]의 경우는 담을 수 있는 인형을 증가
	 * 
	 * 
	 * 마트료시카
		문제
		답안 제출
		시간 제한	메모리 제한
		1.0 초	512 MB
		문제
		동현이는 인형을 좋아한다. 이러한 동현이를 위해 마트료시카를 선물해주자.
		
		마트료시카는 러시아 전통 인형으로 인형 안의 인형을 넣을 수 있는 인형이다. 인형들이 열렬로 늘어서 있다. 인형들마다 크기가 주어져 있는데, 앞에 있는 인형의 크기가 뒤에 있는 인형의 크기보다 작으면, 앞에 있는 인형을 뒤에 있는 인형 안에 넣을 수 있다.
		
		예를 들어 앞에서부터 순서대로 크기가 (1, 5, 2, 3, 7)인 5개의 인형이 있다면, 크기 1인 인형을 크기 5인 인형에 넣고, 다시 이 인형들을 크기 7인 인형 안에 넣을 수 있다. 하지만 이렇게 인형를 넣을 수 있는 방법은 여러 가지가 있을 수 있다. 앞의 예에서 차례대로 크기가 1, 2, 3, 7인 인형들을 선택하면 총 4개의 인형이 한 개의 인형에 들어가게 된다.
		
		인형들의 크기가 주어질 때, 한 번에 넣을 수 있는 최대의 인형 개수를 출력하는 프로그램을 작성하시오.
		
		입력
		첫 번째 줄에 인형의 개수 N이 주어진다. (1 ≤ N ≤ 1000)
		
		두 번째 줄에 각 인형들의 크기가 순서대로 공백으로 분리되어 주어진다.
		
		출력
		첫 번째 줄에 한 줄에 넣을 수 있는 최대의 인형 개수를 출력한다.
		
		힌트
		입력 예제
		
		8
		1 6 2 5 7 3 5 6
		출력 예제
		
		5
		

	




	 */
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
	
		int[] dolls = new int[N];

		for(int i = 0 ; i < N; i++) {
			String[] splits = br.readLine().split(" ");
			//x와 y값에 10000을 더한다.
			dolls[i] =  Integer.parseInt(splits[i]); 
		}
		
		for(int i = 0 ; i < N; i++) {
			
			int dollHeight = dolls[i];
			
			
		}
		
	}

}
