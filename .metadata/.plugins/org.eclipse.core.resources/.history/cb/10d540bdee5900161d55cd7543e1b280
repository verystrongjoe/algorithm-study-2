import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class source {

	
	/***
	 *
	 * 
	 * 
	 * 
	 * 
		시간 제한	메모리 제한
		1.0 초	512 MB
		문제
		2차원 평면에 N개의 점이 주어졌을 때, 이들 중 몇 개의 점을 골라 볼록 다각형을 만드는데, 나머지 모든 점을 내부에 포함하도록 할 수 있다. 이를 볼록 껍질 (CONVEX HULL) 이라 한다.
		 N개의 점이 주어질 때 볼록껍질을 이루는 점의 개수를 구하여라. 만약 볼록껍질을 이루는 한 선분에 3개 이상의 점이 포함된 경우, 양 끝점만을 센다.
	
			입력
			첫째 줄에 점의 개수 N이 주어진다(3<=N<=100000). 두 번째 줄부터 N개의 줄에 걸쳐 각 점의 x, y좌표가 주어진다. 좌표는 정수로 주어지며 절대값은 40000을 넘지 않는다. 각 점은 모두 다른 위치에 있으며 모든 점이 한 직선위에 있는 경우는 없다.
			
			출력
			첫째 줄에 볼록껍질을 이루는 점의 개수를 출력한다.
			
			힌트
			입력 예제
			
			8
			1 1
			1 2
			1 3
			2 1
			2 2
			2 3
			3 1
			3 2
			출력 예제
			
			5
	 * @throws IOException 
	 * @throws NumberFormatException 
	 */
	public static void main(String[] args) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		
		double x[] = new double[N];
		double y[] = new double[N];
		
		for(int i = 0; i < N; i++) {
			String[] splits = br.readLine().split(" ");
				x[i] = Double.parseDouble(splits[0]);
				y[i] = Double.parseDouble(splits[1]);
		}
		
	}

}




class Point {
	int x;
	int y;
}

class CompPoints implements Comparable<Point> {
	
	@Override
	public int compareTo(Point p) {
		
		return 0;
	}
	
	
}